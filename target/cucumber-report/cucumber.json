[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-03-29T01:15:48.494Z",
        "line": 3,
        "name": "Validate weather details based on city and country",
        "description": "",
        "id": "weather-testing;validate-weather-details-based-on-city-and-country",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1053778000,
              "status": "passed"
            },
            "line": 4,
            "name": "User makes request to get weather details by \"London\" city and \"UK\" country",
            "match": {
              "arguments": [
                {
                  "val": "\"London\"",
                  "offset": 45
                },
                {
                  "val": "\"UK\"",
                  "offset": 63
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByCityAndCountry(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 106560000,
              "status": "passed"
            },
            "line": 5,
            "name": "Verify that the request is successful and verify the response body contains weather information specific to \"London\" city of \"United Kingdom\" country",
            "match": {
              "arguments": [
                {
                  "val": "\"London\"",
                  "offset": 108
                },
                {
                  "val": "\"United Kingdom\"",
                  "offset": 125
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestWasSuccessfulAndVerifyTheResponseBody(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:49.704Z",
        "line": 7,
        "name": "Validate weather details based on the valid city ID",
        "description": "",
        "id": "weather-testing;validate-weather-details-based-on-the-valid-city-id",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 244226000,
              "status": "passed"
            },
            "line": 8,
            "name": "User makes request to get weather details by city ID 2172797",
            "match": {
              "arguments": [
                {
                  "val": "2172797",
                  "offset": 53
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByCityID(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6121000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the request is successful and verify the response body contains weather information specific to city having 2172797 ID",
            "match": {
              "arguments": [
                {
                  "val": "2172797",
                  "offset": 120
                }
              ],
              "location": "stepdefinitions.Steps.verifySuccessfulRequestAndResponseSpecificToCityID(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:49.959Z",
        "line": 11,
        "name": "Validate weather details based on the valid city latitude and longitude",
        "description": "",
        "id": "weather-testing;validate-weather-details-based-on-the-valid-city-latitude-and-longitude",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 231612000,
              "status": "passed"
            },
            "line": 12,
            "name": "User makes request to get weather details by \"35\" latitude and \"109\" longitude",
            "match": {
              "arguments": [
                {
                  "val": "\"35\"",
                  "offset": 45
                },
                {
                  "val": "\"109\"",
                  "offset": 63
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByLatitudeAndLongitude(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4728000,
              "status": "passed"
            },
            "line": 13,
            "name": "Verify that the request is successful and verify the response body contains weather information specific to 35 latitude and 109 longitude",
            "match": {
              "arguments": [
                {
                  "val": "35",
                  "offset": 108
                },
                {
                  "val": "109",
                  "offset": 124
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestIsSuccessfulAndResponseContainsInformationSpecificToLatitudeAndLongitude(double,double)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:50.201Z",
        "line": 15,
        "name": "Verify error on requesting weather details of city which does not exists in that country",
        "description": "",
        "id": "weather-testing;verify-error-on-requesting-weather-details-of-city-which-does-not-exists-in-that-country",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 252563000,
              "status": "passed"
            },
            "line": 16,
            "name": "User makes request to get weather details by \"Stockholm\" city and \"UK\" country",
            "match": {
              "arguments": [
                {
                  "val": "\"Stockholm\"",
                  "offset": 45
                },
                {
                  "val": "\"UK\"",
                  "offset": 66
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByCityAndCountry(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4775000,
              "status": "passed"
            },
            "line": 17,
            "name": "Verify request response code is 404 and contains \"city not found\" message",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                },
                {
                  "val": "\"city not found\"",
                  "offset": 49
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestResponseCodeAndContainsMessage(int,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:50.462Z",
        "line": 19,
        "name": "Verify error on requesting weather details of city ID which is invalid",
        "description": "",
        "id": "weather-testing;verify-error-on-requesting-weather-details-of-city-id-which-is-invalid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 230282000,
              "status": "passed"
            },
            "line": 20,
            "name": "User makes request to get weather details by city ID 8787",
            "match": {
              "arguments": [
                {
                  "val": "8787",
                  "offset": 53
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByCityID(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1395000,
              "status": "passed"
            },
            "line": 21,
            "name": "Verify request response code is 404 and contains \"city not found\" message",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                },
                {
                  "val": "\"city not found\"",
                  "offset": 49
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestResponseCodeAndContainsMessage(int,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:50.697Z",
        "line": 23,
        "name": "Validate error on requesting weather details based on the invalid latitude but with valid longitude",
        "description": "",
        "id": "weather-testing;validate-error-on-requesting-weather-details-based-on-the-invalid-latitude-but-with-valid-longitude",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 232498000,
              "status": "passed"
            },
            "line": 24,
            "name": "User makes request to get weather details by \"367675\" latitude and \"109\" longitude",
            "match": {
              "arguments": [
                {
                  "val": "\"367675\"",
                  "offset": 45
                },
                {
                  "val": "\"109\"",
                  "offset": 67
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByLatitudeAndLongitude(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 846000,
              "status": "passed"
            },
            "line": 25,
            "name": "Verify request response code is 400 and contains \"wrong latitude\" message",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 32
                },
                {
                  "val": "\"wrong latitude\"",
                  "offset": 49
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestResponseCodeAndContainsMessage(int,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:50.933Z",
        "line": 27,
        "name": "Validate error on requesting weather details based on the valid latitude but with invalid longitude",
        "description": "",
        "id": "weather-testing;validate-error-on-requesting-weather-details-based-on-the-valid-latitude-but-with-invalid-longitude",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 240539000,
              "status": "passed"
            },
            "line": 28,
            "name": "User makes request to get weather details by \"35\" latitude and \"367675\" longitude",
            "match": {
              "arguments": [
                {
                  "val": "\"35\"",
                  "offset": 45
                },
                {
                  "val": "\"367675\"",
                  "offset": 63
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByLatitudeAndLongitude(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 886000,
              "status": "passed"
            },
            "line": 29,
            "name": "Verify request response code is 400 and contains \"wrong longitude\" message",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 32
                },
                {
                  "val": "\"wrong longitude\"",
                  "offset": 49
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestResponseCodeAndContainsMessage(int,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:51.179Z",
        "line": 31,
        "name": "Validate error on requesting weather details based on the invalid string latitude and invalid String longitude",
        "description": "",
        "id": "weather-testing;validate-error-on-requesting-weather-details-based-on-the-invalid-string-latitude-and-invalid-string-longitude",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 236079000,
              "status": "passed"
            },
            "line": 32,
            "name": "User makes request to get weather details by \"3hj5\" latitude and \"367jk675\" longitude",
            "match": {
              "arguments": [
                {
                  "val": "\"3hj5\"",
                  "offset": 45
                },
                {
                  "val": "\"367jk675\"",
                  "offset": 65
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByLatitudeAndLongitude(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 895000,
              "status": "passed"
            },
            "line": 33,
            "name": "Verify request response code is 400 and contains \"wrong latitude\" message",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 32
                },
                {
                  "val": "\"wrong latitude\"",
                  "offset": 49
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestResponseCodeAndContainsMessage(int,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-03-29T01:15:51.419Z",
        "line": 35,
        "name": "Validate error on requesting weather details based on the valid String latitude but with valid longitude",
        "description": "",
        "id": "weather-testing;validate-error-on-requesting-weather-details-based-on-the-valid-string-latitude-but-with-valid-longitude",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 227851000,
              "status": "passed"
            },
            "line": 36,
            "name": "User makes request to get weather details by \"35\" latitude and \"367jk675\" longitude",
            "match": {
              "arguments": [
                {
                  "val": "\"35\"",
                  "offset": 45
                },
                {
                  "val": "\"367jk675\"",
                  "offset": 63
                }
              ],
              "location": "stepdefinitions.Steps.userMakesRequestToGetWeatherDetailsByLatitudeAndLongitude(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 939000,
              "status": "passed"
            },
            "line": 37,
            "name": "Verify request response code is 400 and contains \"wrong longitude\" message",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 32
                },
                {
                  "val": "\"wrong longitude\"",
                  "offset": 49
                }
              ],
              "location": "stepdefinitions.Steps.verifyRequestResponseCodeAndContainsMessage(int,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Weather Testing",
    "description": "",
    "id": "weather-testing",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/weathertest.feature",
    "tags": []
  }
]